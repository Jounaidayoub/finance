version: '3.8' # Specifies the docker-compose version

services:
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2 # Use a specific version of the Zookeeper image
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181" # Map host port 2181 to container port 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.2 # Use a specific version of the Kafka image
    container_name: kafka
    depends_on:
      - zookeeper # Tell Docker Compose to start Zookeeper before Kafka
    ports:
      - "9092:9092" # Map host port 9092 to container port 9092 (for your Python code)
      - "9093:9093" # Map host port 9093 to internal listener (for inter-broker communication if needed)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # Kafka connects to Zookeeper using the service name 'zookeeper'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:9093 # How clients connect (localhost for host, kafka for internal)
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redis:
    image: redis:7.2-alpine # Use a specific version of the Redis image
    container_name: redis
    ports:
      - "6379:6379" # Map host port 6379 to container port 6379


  elasticsearch:
    image: elasticsearch:9.0.1
    container_name: es01
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    # networks:
      # - elastic

  kibana:
    image: kibana:9.0.1
    container_name: kib01
    environment:
      - ELASTICSEARCH_HOSTS=http://es01:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    # networks:
    #   - elastic